{"version":3,"file":"static/js/866.e39a7bda.chunk.js","mappings":"sSAEMA,E,MAAYC,GAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAAUM,IAAI,wBADN,uBACvBC,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAOjBC,EAAS,mCAAG,WAAOC,GAAP,yFACEV,EAAUM,IAAI,gBAAiB,CAACH,OAAQ,CAACO,MAAAA,KAD3C,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKC,SAFS,2CAAH,sDAKTG,EAAY,mCAAG,WAAOC,GAAP,yFACLZ,EAAUM,IAAV,iBAAwBM,IADnB,uBACpBL,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAOZM,EAAS,mCAAG,WAAOC,GAAP,yFACEd,EAAUM,IAAV,iBAAwBQ,EAAxB,aADF,uBACbP,EADa,EACbA,KADa,kBAGdA,EAAKC,SAHS,2CAAH,sDAOTO,EAAO,mCAAG,WAAOD,GAAP,yFACId,EAAUM,IAAV,iBAAwBQ,EAAxB,aADJ,uBACXP,EADW,EACXA,KADW,kBAGZA,EAAKS,MAHO,2CAAH,qD,2GClCpB,EAAyB,wBAAzB,EAA2D,yBAA3D,EAA8F,yB,SCK/E,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAUK,GAASM,MAAK,SAAAC,GACtBC,QAAQC,IAAI,mBAAoBF,GAChCH,EAAWG,EACZ,GACF,GAAE,CAACP,KAGF,yBACGG,EAAQO,OAAS,GAChB,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,gBAAIC,UAAWC,EAAf,qBAAoCF,EAAOG,WAC3C,cAAGF,UAAWC,EAAd,SAA4BF,EAAOI,WACnC,iBAAMH,UAAWC,EAAjB,SAA+BF,EAAOK,WAAWC,MAAM,EAAG,QAHnDN,EAAOlB,GADC,OASrB,gDAIP,C","sources":["helpers/API.js","webpack://react-homework-template/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '094c8fd5de10f821a95f28767be2e726',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await moviesApi.get('/trending/movie/week');\n\n  return data.results;\n};\n\n\nexport const findMovie = async (query) => {\n    const { data } = await moviesApi.get(\"/search/movie\", {params: {query}});\n    return data.results;\n}\n\nexport const getMovieById = async (id) => {\nconst { data } = await moviesApi.get(`/movie/${id}`)\n\nreturn data;\n\n}\n\nexport const getReview = async (movie_id) => {\n    const { data } = await moviesApi.get(`/movie/${movie_id}/reviews`)\n    \n    return data.results;\n}\n\n\nexport const getCast = async (movie_id) => {\n    const { data } = await moviesApi.get(`/movie/${movie_id}/credits`)\n    \n    return data.cast;\n}","// extracted by mini-css-extract-plugin\nexport default {\"Author\":\"Reviews_Author__7b+MS\",\"Content\":\"Reviews_Content__RchDo\",\"Created\":\"Reviews_Created__VHE4m\"};","import { getReview } from 'helpers/API';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from \"./Reviews.module.css\"\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReview(movieId).then(reviewsData => {\n      console.log('reviewsData :>> ', reviewsData);\n      setReviews(reviewsData);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3 className={css.Author}>Author: {review.author}</h3>\n              <p className={css.Content}>{review.content}</p>\n              <span className={css.Created}>{review.created_at.slice(0, 10)}</span>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <span>No Reviews Found</span>\n      )}\n    </div>\n  );\n}\n"],"names":["moviesApi","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","findMovie","query","getMovieById","id","getReview","movie_id","getCast","cast","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","reviewsData","console","log","length","map","review","className","css","author","content","created_at","slice"],"sourceRoot":""}