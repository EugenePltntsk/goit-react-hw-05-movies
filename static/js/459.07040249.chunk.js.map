{"version":3,"file":"static/js/459.07040249.chunk.js","mappings":"sSAEMA,E,MAAYC,GAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAAUM,IAAI,wBADN,uBACvBC,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAOjBC,EAAS,mCAAG,WAAOC,GAAP,yFACEV,EAAUM,IAAI,gBAAiB,CAACH,OAAQ,CAACO,MAAAA,KAD3C,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKC,SAFS,2CAAH,sDAKTG,EAAY,mCAAG,WAAOC,GAAP,yFACLZ,EAAUM,IAAV,iBAAwBM,IADnB,uBACpBL,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAOZM,EAAS,mCAAG,WAAOC,GAAP,yFACEd,EAAUM,IAAV,iBAAwBQ,EAAxB,aADF,uBACbP,EADa,EACbA,KADa,kBAGdA,EAAKC,SAHS,2CAAH,sDAOTO,EAAO,mCAAG,WAAOD,GAAP,yFACId,EAAUM,IAAV,iBAAwBQ,EAAxB,aADJ,uBACXP,EADW,EACXA,KADW,kBAGZA,EAAKS,MAHO,2CAAH,qD,2GClCpB,GAAgB,SAAW,uBAAuB,WAAa,yBAAyB,SAAW,wB,SCKpF,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAQK,GAASG,MAAK,SAAAC,GACpBL,EAAQK,EACT,GACF,GAAE,CAACJ,KAGF,yBACGJ,EAAKS,OAAS,GACb,eAAIC,UAAWC,EAAAA,SAAf,SACGX,EAAKY,QAAO,SAACC,EAAKC,GAcjB,OAbIA,EAAQC,cAEVF,EAAIG,MACF,gBAAIN,UAAWC,EAAAA,OAAf,WACE,gBACAM,IAAKH,EAAQI,KACXR,UAAWC,EAAAA,WACXQ,IAAG,yCAAoCL,EAAQC,iBAEjD,eAAIL,UAAWC,EAAAA,SAAf,SAA8BG,EAAQI,WAIrCL,CACR,GAAE,OAGL,oDAIP,C","sources":["helpers/API.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '094c8fd5de10f821a95f28767be2e726',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await moviesApi.get('/trending/movie/week');\n\n  return data.results;\n};\n\n\nexport const findMovie = async (query) => {\n    const { data } = await moviesApi.get(\"/search/movie\", {params: {query}});\n    return data.results;\n}\n\nexport const getMovieById = async (id) => {\nconst { data } = await moviesApi.get(`/movie/${id}`)\n\nreturn data;\n\n}\n\nexport const getReview = async (movie_id) => {\n    const { data } = await moviesApi.get(`/movie/${movie_id}/reviews`)\n    \n    return data.results;\n}\n\n\nexport const getCast = async (movie_id) => {\n    const { data } = await moviesApi.get(`/movie/${movie_id}/credits`)\n    \n    return data.cast;\n}","// extracted by mini-css-extract-plugin\nexport default {\"castName\":\"Cast_castName__51zqr\",\"castPhotos\":\"Cast_castPhotos__PVWXK\",\"castList\":\"Cast_castList__hbalY\"};","import { getCast } from 'helpers/API';\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(castData => {\n      setCast(castData);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul className={css.castList}>\n          {cast.reduce((acc, oneCast) => {\n            if (oneCast.profile_path) {\n              \n              acc.push(\n                <li className={css.Lishka}>\n                  <img\n                  alt={oneCast.name}\n                    className={css.castPhotos}\n                    src={`https://image.tmdb.org/t/p/w500${oneCast.profile_path}`}\n                  />\n                  <h3 className={css.castName}>{oneCast.name}</h3>\n                </li>\n              );\n            }\n            return acc;\n          }, [])}\n        </ul>\n      ) : (\n        <span>No actors list found</span>\n      )}\n    </div>\n  );\n}\n"],"names":["moviesApi","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","findMovie","query","getMovieById","id","getReview","movie_id","getCast","cast","Cast","useState","setCast","movieId","useParams","useEffect","then","castData","length","className","css","reduce","acc","oneCast","profile_path","push","alt","name","src"],"sourceRoot":""}