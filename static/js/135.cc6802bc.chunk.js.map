{"version":3,"file":"static/js/135.cc6802bc.chunk.js","mappings":"sSAEMA,E,MAAYC,GAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAiB,mCAAG,sGACRL,EAAUM,IAAI,wBADN,uBACvBC,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAOjBC,EAAS,mCAAG,WAAOC,GAAP,yFACEV,EAAUM,IAAI,gBAAiB,CAACH,OAAQ,CAACO,MAAAA,KAD3C,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKC,SAFS,2CAAH,sDAKTG,EAAY,mCAAG,WAAOC,GAAP,yFACLZ,EAAUM,IAAV,iBAAwBM,IADnB,uBACpBL,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAOZM,EAAS,mCAAG,WAAOC,GAAP,yFACEd,EAAUM,IAAV,iBAAwBQ,EAAxB,aADF,uBACbP,EADa,EACbA,KADa,kBAGdA,EAAKC,SAHS,2CAAH,sDAOTO,EAAO,mCAAG,WAAOD,GAAP,yFACId,EAAUM,IAAV,iBAAwBQ,EAAxB,aADJ,uBACXP,EADW,EACXA,KADW,kBAGZA,EAAKS,MAHO,2CAAH,qD,oHClCpB,EAA8B,kCAA9B,EAA6E,iC,SCK9D,SAASC,IAAgB,IAAD,QACrC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAAMI,GACJ,UAAAJ,EAASK,aAAT,eAAgBC,KAAKC,WAArB,UAAgCP,EAASK,aAAzC,aAAgC,EAAgBC,KAAKE,SAAU,IAQjE,OANAC,EAAAA,EAAAA,YAAU,YACRrB,EAAAA,EAAAA,IAAaU,GAASY,MAAK,SAAAC,GACzBd,EAASc,EACV,GACF,GAAE,CAACb,KAGF,8BACGF,IACC,iCACE,iBACEgB,UAAWC,EACXC,MAAO,CACLC,gBAAgB,+GAAD,OAAiHnB,EAAMoB,cAAvH,MAHnB,0BAOE,SAAC,KAAD,CAAMC,GAAIb,EAAV,sBACA,gBACAc,IAAKtB,EAAMuB,eACTP,UAAWC,EACXO,IAAG,yCAAoCxB,EAAMyB,gBAE/C,wBAAKzB,EAAMuB,kBACX,uBAAIvB,EAAM0B,YACV,0BAAO1B,EAAM2B,gBACb,uCAAe3B,EAAM4B,iBACrB,sCAAc5B,EAAM6B,cACnB7B,EAAM8B,OAAOC,KAAI,SAAAC,GAAK,OACrB,4BAAsBA,EAAMC,KAA5B,MAAWD,EAAMvC,GADI,KAGvB,SAAC,KAAD,CAAMgB,MAAO,CAAEC,KAAI,UAAEN,EAASK,aAAX,aAAE,EAAgBC,MAAQW,GAAG,OAAhD,mBAGA,SAAC,KAAD,CAAMZ,MAAO,CAAEC,KAAI,UAAEN,EAASK,aAAX,aAAE,EAAgBC,MAAQW,GAAG,UAAhD,yBAKF,SAAC,KAAD,QAKT,C","sources":["helpers/API.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '094c8fd5de10f821a95f28767be2e726',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await moviesApi.get('/trending/movie/week');\n\n  return data.results;\n};\n\n\nexport const findMovie = async (query) => {\n    const { data } = await moviesApi.get(\"/search/movie\", {params: {query}});\n    return data.results;\n}\n\nexport const getMovieById = async (id) => {\nconst { data } = await moviesApi.get(`/movie/${id}`)\n\nreturn data;\n\n}\n\nexport const getReview = async (movie_id) => {\n    const { data } = await moviesApi.get(`/movie/${movie_id}/reviews`)\n    \n    return data.results;\n}\n\n\nexport const getCast = async (movie_id) => {\n    const { data } = await moviesApi.get(`/movie/${movie_id}/credits`)\n    \n    return data.cast;\n}","// extracted by mini-css-extract-plugin\nexport default {\"DivForMovie\":\"MovieDetails_DivForMovie__VJz9X\",\"MovieImage\":\"MovieDetails_MovieImage__VSxAu\"};","import { getMovieById } from 'helpers/API';\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const goBackPath =\n    location.state?.from.pathname + location.state?.from.search || '/';\n\n  useEffect(() => {\n    getMovieById(movieId).then(resultData => {\n      setMovie(resultData);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <div\n            className={css.DivForMovie}\n            style={{\n              backgroundImage: `linear-gradient(to right, rgba(47, 48, 58, 0.4), rgba(47, 48, 58, 0.4)), url(https://image.tmdb.org/t/p/w500${movie.backdrop_path})`,\n            }}\n          >\n            MovieDetails\n            <Link to={goBackPath}>Go Back</Link>\n            <img\n            alt={movie.original_title}\n              className={css.MovieImage}\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            />\n            <h2>{movie.original_title}</h2>\n            <p>{movie.overview}</p>\n            <span>{movie.release_date}</span>\n            <span>Rating: {movie.vote_average}</span>\n            <span>Votes: {movie.vote_count}</span>\n            {movie.genres.map(genre => (\n              <span key={genre.id}>{genre.name} </span>\n            ))}\n            <Link state={{ from: location.state?.from }} to=\"cast\">\n              Cast\n            </Link>\n            <Link state={{ from: location.state?.from }} to=\"reviews\">\n              Reviews\n            </Link>\n          </div>\n\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["moviesApi","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","findMovie","query","getMovieById","id","getReview","movie_id","getCast","cast","MovieDetails","useState","movie","setMovie","movieId","useParams","location","useLocation","console","log","goBackPath","state","from","pathname","search","useEffect","then","resultData","className","css","style","backgroundImage","backdrop_path","to","alt","original_title","src","poster_path","overview","release_date","vote_average","vote_count","genres","map","genre","name"],"sourceRoot":""}